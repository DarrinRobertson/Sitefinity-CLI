/* {{> sign}} */

using Telerik.Sitefinity.Configuration;
using Telerik.Sitefinity.Data;

namespace SitefinityWebApp.Modules.{{name}}
{
    public class {{name}}ModuleManager : ManagerBase<{{name}}ModuleDataProvider>
    {
        public {{name}}ModuleManager()
            : this(null)
        {
        }

        public {{name}}ModuleManager(string providerName)
            : base(providerName)
        {
        }

        public {{name}}ModuleManager(string providerName, string transactionName)
            : base(providerName, transactionName)
        {
        }

        protected override GetDefaultProvider DefaultProviderDelegate
        {
            get { return () => Config.Get<{{name}}ModuleConfig>().DefaultProvider; }
        }

        public override string ModuleName
        {
            get { return {{name}}Module.moduleName; }
        }

        protected override ConfigElementDictionary<string, DataProviderSettings> ProvidersSettings
        {
            get { return Config.Get<{{name}}ModuleConfig>().Providers; }
        }

        public static {{name}}ModuleManager GetManager()
        {
            return ManagerBase<{{name}}ModuleDataProvider>.GetManager<{{name}}ModuleManager>();
        }

        public static {{name}}ModuleManager GetManager(string providerName, string transactionName)
        {
            return ManagerBase<{{name}}ModuleDataProvider>.GetManager<{{name}}ModuleManager>(providerName, transactionName);
        }

        public static {{name}}ModuleManager GetManager(string providerName)
        {
            return ManagerBase<{{name}}ModuleDataProvider>.GetManager<{{name}}ModuleManager>(providerName);
        }
    }
}